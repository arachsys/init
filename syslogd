#!/bin/bash

CONFFILE=/etc/syslogd.conf
DATASYNC=0
LOGDIR=/var/log
PIDFILE=/run/syslogd.pid
RESTART=0

classify() {
  if (( LEVEL > 6 )); then
    FACILITY=debug
  elif [[ $FACILITY == auth* ]]; then
    FACILITY=auth
  elif [[ $FACILITY != @(kern|mail) ]]; then
    FACILITY=daemon
  fi
}

log() {
  if [[ ! -d $LOGDIR/$FACILITY ]]; then
    [[ $FACILITY == debug ]] && return
    mkdir -m 0700 -p "$LOGDIR/$FACILITY"
  fi
  printf '%s %s\n' "$TIME" "$ENTRY" >>"$LOGDIR/$FACILITY/$DATE"
  (( DATASYNC )) && sync -d "$LOGDIR/$FACILITY/$DATE"
}

while getopts :d:f:kp:s OPTION; do
  case $OPTION in
    d)
      LOGDIR=$OPTARG
      ;;
    f)
      CONFFILE=$OPTARG
      ;;
    k)
      classify() (( PEERPID ))
      log() {
        printf '<%d>%s\n' $((LEVEL + 24)) "$ENTRY" >>/dev/kmsg
      }
      ;;
    p)
      PIDFILE=$OPTARG
      ;;
    s)
      DATASYNC=1
      ;;
  esac
done

if [[ -f $CONFFILE ]] && ! source "$CONFFILE"; then
  exit 1
fi

if ! { exec 3>>"$PIDFILE" && flock -n 3; } 2>/dev/null; then
  echo "Failed to lock $PIDFILE; is ${0##*/} already running?" >&2
  exit 1
fi

if read -a STAT </proc/self/stat && (( $$ != STAT[5] )); then
  exec daemon -- "$0" "$@"
  rm -f "$PIDFILE"
  exit 1
fi

echo $$ >"$PIDFILE"
trap 'trap - TERM && kill -TERM 0 && rm -f "$PIDFILE"' EXIT
trap 'exec -- "$0" "$@"' HUP

if [[ ! -p /dev/stdin ]]; then
  exec < <(syslog 3>&-)
fi

while read -r PEERPID PEERUID PEERGID FACILITY LEVEL DATE TIME ENTRY; do
  classify && log
done
